//------------------------------------------------------------------------------
// <auto-generated>
//    Dieser Code wurde aus einer Vorlage generiert.
//
//    Manuelle Änderungen an dieser Datei führen möglicherweise zu unerwartetem Verhalten Ihrer Anwendung.
//    Manuelle Änderungen an dieser Datei werden überschrieben, wenn der Code neu generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Data.EntityClient;
using System.ComponentModel;
using System.Xml.Serialization;
using System.Runtime.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM-Beziehungsmetadaten

[assembly: EdmRelationshipAttribute("IMSORMModel", "OnSiteOperatorReport", "OnSiteOperator", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(IMS.DataAccess.OnSiteOperator), "Report", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(IMS.DataAccess.Report), true)]

#endregion

namespace IMS.DataAccess
{
    #region Kontexte
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    public partial class IMSORMModelContainer : ObjectContext
    {
        #region Konstruktoren
    
        /// <summary>
        /// Initialisiert ein neues IMSORMModelContainer-Objekt mithilfe der in Abschnitt 'IMSORMModelContainer' der Anwendungskonfigurationsdatei gefundenen Verbindungszeichenfolge.
        /// </summary>
        public IMSORMModelContainer() : base("name=IMSORMModelContainer", "IMSORMModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues IMSORMModelContainer-Objekt.
        /// </summary>
        public IMSORMModelContainer(string connectionString) : base(connectionString, "IMSORMModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialisiert ein neues IMSORMModelContainer-Objekt.
        /// </summary>
        public IMSORMModelContainer(EntityConnection connection) : base(connection, "IMSORMModelContainer")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partielle Methoden
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet-Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<OnSiteOperator> OnSiteOperators
        {
            get
            {
                if ((_OnSiteOperators == null))
                {
                    _OnSiteOperators = base.CreateObjectSet<OnSiteOperator>("OnSiteOperators");
                }
                return _OnSiteOperators;
            }
        }
        private ObjectSet<OnSiteOperator> _OnSiteOperators;
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        public ObjectSet<Report> Reports
        {
            get
            {
                if ((_Reports == null))
                {
                    _Reports = base.CreateObjectSet<Report>("Reports");
                }
                return _Reports;
            }
        }
        private ObjectSet<Report> _Reports;

        #endregion
        #region AddTo-Methoden
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'OnSiteOperators'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToOnSiteOperators(OnSiteOperator onSiteOperator)
        {
            base.AddObject("OnSiteOperators", onSiteOperator);
        }
    
        /// <summary>
        /// Veraltete Methode zum Hinzufügen eines neuen Objekts zum EntitySet 'Reports'. Verwenden Sie stattdessen die Methode '.Add' der zugeordneten Eigenschaft 'ObjectSet&lt;T&gt;'.
        /// </summary>
        public void AddToReports(Report report)
        {
            base.AddObject("Reports", report);
        }

        #endregion
    }
    

    #endregion
    
    #region Entitäten
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IMSORMModel", Name="OnSiteOperator")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class OnSiteOperator : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues OnSiteOperator-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft ID.</param>
        /// <param name="name">Anfangswert der Eigenschaft Name.</param>
        public static OnSiteOperator CreateOnSiteOperator(global::System.Guid id, global::System.String name)
        {
            OnSiteOperator onSiteOperator = new OnSiteOperator();
            onSiteOperator.ID = id;
            onSiteOperator.Name = name;
            return onSiteOperator;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Name
        {
            get
            {
                return _Name;
            }
            set
            {
                OnNameChanging(value);
                ReportPropertyChanging("Name");
                _Name = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Name");
                OnNameChanged();
            }
        }
        private global::System.String _Name;
        partial void OnNameChanging(global::System.String value);
        partial void OnNameChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IMSORMModel", "OnSiteOperatorReport", "Report")]
        public EntityCollection<Report> Reports
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Report>("IMSORMModel.OnSiteOperatorReport", "Report");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Report>("IMSORMModel.OnSiteOperatorReport", "Report", value);
                }
            }
        }

        #endregion
    }
    
    /// <summary>
    /// Keine Dokumentation für Metadaten verfügbar.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="IMSORMModel", Name="Report")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Report : EntityObject
    {
        #region Factory-Methode
    
        /// <summary>
        /// Erstellt ein neues Report-Objekt.
        /// </summary>
        /// <param name="id">Anfangswert der Eigenschaft ID.</param>
        /// <param name="operatorID">Anfangswert der Eigenschaft OperatorID.</param>
        /// <param name="text">Anfangswert der Eigenschaft Text.</param>
        /// <param name="createDate">Anfangswert der Eigenschaft CreateDate.</param>
        public static Report CreateReport(global::System.Guid id, global::System.Guid operatorID, global::System.String text, global::System.DateTime createDate)
        {
            Report report = new Report();
            report.ID = id;
            report.OperatorID = operatorID;
            report.Text = text;
            report.CreateDate = createDate;
            return report;
        }

        #endregion
        #region Primitive Eigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Guid _ID;
        partial void OnIDChanging(global::System.Guid value);
        partial void OnIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Guid OperatorID
        {
            get
            {
                return _OperatorID;
            }
            set
            {
                OnOperatorIDChanging(value);
                ReportPropertyChanging("OperatorID");
                _OperatorID = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("OperatorID");
                OnOperatorIDChanged();
            }
        }
        private global::System.Guid _OperatorID;
        partial void OnOperatorIDChanging(global::System.Guid value);
        partial void OnOperatorIDChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Text
        {
            get
            {
                return _Text;
            }
            set
            {
                OnTextChanging(value);
                ReportPropertyChanging("Text");
                _Text = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Text");
                OnTextChanged();
            }
        }
        private global::System.String _Text;
        partial void OnTextChanging(global::System.String value);
        partial void OnTextChanged();
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime CreateDate
        {
            get
            {
                return _CreateDate;
            }
            set
            {
                OnCreateDateChanging(value);
                ReportPropertyChanging("CreateDate");
                _CreateDate = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CreateDate");
                OnCreateDateChanged();
            }
        }
        private global::System.DateTime _CreateDate;
        partial void OnCreateDateChanging(global::System.DateTime value);
        partial void OnCreateDateChanged();

        #endregion
    
        #region Navigationseigenschaften
    
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("IMSORMModel", "OnSiteOperatorReport", "OnSiteOperator")]
        public OnSiteOperator OnSiteOperator
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OnSiteOperator>("IMSORMModel.OnSiteOperatorReport", "OnSiteOperator").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OnSiteOperator>("IMSORMModel.OnSiteOperatorReport", "OnSiteOperator").Value = value;
            }
        }
        /// <summary>
        /// Keine Dokumentation für Metadaten verfügbar.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<OnSiteOperator> OnSiteOperatorReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<OnSiteOperator>("IMSORMModel.OnSiteOperatorReport", "OnSiteOperator");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<OnSiteOperator>("IMSORMModel.OnSiteOperatorReport", "OnSiteOperator", value);
                }
            }
        }

        #endregion
    }

    #endregion
    
}
